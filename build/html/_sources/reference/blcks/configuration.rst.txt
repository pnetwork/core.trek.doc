
*************
Configuration
*************

Config in Trek CLI
******************

當使用 Trek CLI 開發時，Blcks 專案會產生以下的 config.json

.. code:: json

    {
        "marvin_url": "",
        "marvin_JWT": "",
        "marvin_secret": "",
        "input_event_path": "inputs/event.yml",
        "envs": {
            "BLCKS_DEBUG_LOG_MODE": "table",
            "BLCKS_DEBUG_LOG_TABLE_WIDTH": 100,
            "BLCKS_DEBUG_LOG_FIELDS": "data",
            "BLCKS_DEBUG_LOG_FORMAT": "{message} => inputParams: {data[inputParamsStr]}"
        }
    }

| config 提供了專案、Global 兩種層級的設置，專案的設置會覆蓋 Global 設置。
| 若 Blcks 專案是處於 Trek 專案下 (即在其 `src/blcks/` 下) 則讀取的優先順序為 ``Blcks 專案設置 > Trek 專案設置 > Global 設置``。

設置中的 ``envs`` 是 Blcks 執行時讀取的環境變數，與 debug 相關的設定可以參考下面的章節： `Environment Variables for Debugging`_

.. role:: red

marvin_url :red:`*` 
^^^^^^^^^^^^^^^^^^^
| Marvin 平台 url。
| 若需使用 Marvin 平台資產、或佈署時必需填入，若不使用則可以不需要填。

marvin_JWT :red:`*` 
^^^^^^^^^^^^^^^^^^^
| Marvin 平台 jwt tocken 設置，屬於 ``marvin_url`` 的 jwt token。

.. note:: 若 ``marvin_url`` 有設置需求時，``marvin_JWT`` 也必需設置。

詳細的設定介紹可以參考 `Trek config 介紹 <https://pnetwork.github.io/core.trek.doc/build/html/start/index.html#config-development-environment>`_

Environment Variables for Debugging
***********************************

.. _top:

.. list-table::
   :widths: 20 10 70
   :header-rows: 1

   * - 環境變數
     - 設定值
     - 描述
   * - BLCKS_DEBUG_LOG_MODE_
     - normal / table
     - 設定 log 印出來的樣式，有 normal, table 兩種
   * - BLCKS_DEBUG_LOG_TABLE_WIDTH_
     - 數字，如：100
     - 設定 log 表格寬度
   * - BLCKS_DEBUG_LOG_FIELDS_
     - data,taskId, ...
     - 設定要印的 log 欄位，以逗號分隔
   * - BLCKS_DEBUG_LOG_FORMAT_
     - ``Coordinates: {latitude}, {longitude}``
     - 設定 normal 模式下要顯示的 log 樣式
   * - SHOW_DEBUG_LOGS_
     - 1 (有此變數就生效)
     - 印出一些 request 相關資訊


BLCKS_DEBUG_LOG_MODE
^^^^^^^^^^^^^^^^^^^^

有 normal / table 兩種可以設定，當沒設定時印出的 log 為 json format。

.. image:: /_static/images/env_log_none.png

- `normal` 為單行模式，可以透過 `BLCKS_DEBUG_LOG_FORMAT` 來設定樣式

.. image:: /_static/images/env_log_normal.png

- `table` 為表格模式，將原本 json 格式依照欄位用表格印出，其中 message 欄位一定會印

.. image:: /_static/images/env_log_table.png


BLCKS_DEBUG_LOG_TABLE_WIDTH
^^^^^^^^^^^^^^^^^^^^^^^^^^^

`BLCKS_DEBUG_LOG_MODE` 為 table 時，可設定 log 表格寬度，預設為 100


BLCKS_DEBUG_LOG_FIELDS
^^^^^^^^^^^^^^^^^^^^^^

設定要印的 log 欄位，以逗號分隔，設定範例：

.. code-block:: javascript

    {
        // ...
        "envs": {
            "BLCKS_DEBUG_LOG_FIELDS": "data,taskId",
            // ...
        }
    }

- table 模式下影響的為顯示的 row
- normal 模式下影響的為 `BLCKS_DEBUG_LOG_FORMAT` 可使用的 key


BLCKS_DEBUG_LOG_FORMAT
^^^^^^^^^^^^^^^^^^^^^^

設定 normal 模式下要顯示的 log 樣式，以 ``Coordinates: {latitude}, {longitude}`` 這樣的形式設定

.. code-block:: javascript

    {
        // ...
        "envs": {
            "BLCKS_DEBUG_LOG_FORMAT": "{message} => data: {data[inputParamsStr]}, taskId: {taskId}",
            // ...
        }
    }

    // 輸出的 log 會為
    // bot_infos: ['CH-bka2bbkpl'], str_message: sero1: 4 => data: , taskId: trek-task-id


SHOW_DEBUG_LOGS
^^^^^^^^^^^^^^^

有設定此變數則生效，一般會直接設為 ``1``

.. code-block:: javascript

    {
        // ...
        "envs": {
            "SHOW_DEBUG_LOGS": 1,
            // ...
        }
    }

印出一些 request 相關資訊，目前包含的有：

- 收到的 event 內容
- 送出的 request 資訊
- 收到的 response 資訊
